__NUXT_JSONP__("/functions/string", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj){return {data:[{document:{slug:g,description:"More Sass - the library of useful SCSS mixins and functions.",title:g,position:150,category:"Functions",fullscreen:false,toc:[{id:t,depth:x,text:t},{id:u,depth:x,text:u},{id:v,depth:x,text:v},{id:w,depth:x,text:w}],body:{type:"root",children:[{type:a,tag:i,props:{},children:[{type:b,value:"Functions group for work with strings."}]},{type:b,value:f},{type:a,tag:y,props:{id:t},children:[{type:a,tag:z,props:{ariaHidden:A,href:"#str-capitalize",tabIndex:B},children:[{type:a,tag:c,props:{className:[C,D]},children:[]}]},{type:b,value:t}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:b,value:"Capitalizes a given string."}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:E}]}]},{type:b,value:ag},{type:a,tag:F,props:{},children:[{type:a,tag:G,props:{},children:[{type:a,tag:m,props:{},children:[{type:a,tag:k,props:{},children:[{type:b,value:H}]},{type:a,tag:k,props:{},children:[{type:b,value:I}]},{type:a,tag:k,props:{},children:[{type:b,value:J}]},{type:a,tag:k,props:{},children:[{type:b,value:K}]}]}]},{type:a,tag:L,props:{},children:[{type:a,tag:m,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:M},{type:a,tag:c,props:{className:[q]},children:[{type:b,value:r}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:g}]}]},{type:a,tag:e,props:{},children:[{type:b,value:s}]},{type:a,tag:e,props:{},children:[{type:b,value:ah}]}]}]}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:N}]}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:g}]},{type:b,value:" - The input string with its first character transformed to uppercase."}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:O}]}]},{type:b,value:f},{type:a,tag:P,props:{className:[Q]},children:[{type:a,tag:R,props:{className:[S,T]},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{className:[d,o]},children:[{type:b,value:U}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:V}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,W,o]},children:[{type:b,value:X}]},{type:b,value:Y},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:p}]},{type:b,value:Z},{type:a,tag:c,props:{className:[d,o]},children:[{type:b,value:_}]},{type:b,value:$},{type:a,tag:c,props:{className:[d,aa]},children:[{type:b,value:t}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ab}]},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:"'foo bar'"}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ac}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:p}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,ad]},children:[{type:b,value:"\u002F\u002F string: 'Foo bar'"}]},{type:b,value:f}]}]}]},{type:b,value:f},{type:a,tag:y,props:{id:u},children:[{type:a,tag:z,props:{ariaHidden:A,href:"#str-replace",tabIndex:B},children:[{type:a,tag:c,props:{className:[C,D]},children:[]}]},{type:b,value:u}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:b,value:"Replaces all occurrences of the search string with the replacement string."}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:E}]}]},{type:b,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:a,tag:F,props:{},children:[{type:a,tag:G,props:{},children:[{type:a,tag:m,props:{},children:[{type:a,tag:k,props:{},children:[{type:b,value:H}]},{type:a,tag:k,props:{},children:[{type:b,value:I}]},{type:a,tag:k,props:{},children:[{type:b,value:J}]},{type:a,tag:k,props:{},children:[{type:b,value:K}]}]}]},{type:a,tag:L,props:{},children:[{type:a,tag:m,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:M},{type:a,tag:c,props:{className:[q]},children:[{type:b,value:r}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:g}]}]},{type:a,tag:e,props:{},children:[{type:b,value:s}]},{type:a,tag:e,props:{},children:[{type:b,value:"The string being searched and replaced on."}]}]},{type:a,tag:m,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:"$search "},{type:a,tag:c,props:{className:[q]},children:[{type:b,value:r}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:g}]}]},{type:a,tag:e,props:{},children:[{type:b,value:s}]},{type:a,tag:e,props:{},children:[{type:b,value:"The value being searched for."}]}]},{type:a,tag:m,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:"$replace "},{type:a,tag:c,props:{className:[q]},children:[{type:b,value:r}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:g}]}]},{type:a,tag:e,props:{},children:[{type:b,value:s}]},{type:a,tag:e,props:{},children:[{type:b,value:"The replacement value that replaces found search values."}]}]},{type:a,tag:m,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:"$limit"}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:"?number"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:"null"}]}]},{type:a,tag:e,props:{},children:[{type:b,value:"If supplied, this will be set to the number of replacements performed."}]}]}]}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:N}]}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:g}]},{type:b,value:" - The string with searched values replaced."}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:O}]}]},{type:b,value:f},{type:a,tag:P,props:{className:[Q]},children:[{type:a,tag:R,props:{className:[S,T]},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{className:[d,o]},children:[{type:b,value:U}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:V}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,W,o]},children:[{type:b,value:X}]},{type:b,value:Y},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:p}]},{type:b,value:Z},{type:a,tag:c,props:{className:[d,o]},children:[{type:b,value:_}]},{type:b,value:$},{type:a,tag:c,props:{className:[d,aa]},children:[{type:b,value:u}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ab}]},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:"'foo bar baz'"}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ae}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:"'ba'"}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ae}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:"'x'"}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ac}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:p}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,ad]},children:[{type:b,value:"\u002F\u002F string: 'foo xr xz'"}]},{type:b,value:f}]}]}]},{type:b,value:f},{type:a,tag:y,props:{id:v},children:[{type:a,tag:z,props:{ariaHidden:A,href:"#str-split",tabIndex:B},children:[{type:a,tag:c,props:{className:[C,D]},children:[]}]},{type:b,value:v}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:b,value:"Splits a given string to a list of strings."}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:E}]}]},{type:b,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:a,tag:F,props:{},children:[{type:a,tag:G,props:{},children:[{type:a,tag:m,props:{},children:[{type:a,tag:k,props:{},children:[{type:b,value:H}]},{type:a,tag:k,props:{},children:[{type:b,value:I}]},{type:a,tag:k,props:{},children:[{type:b,value:J}]},{type:a,tag:k,props:{},children:[{type:b,value:K}]}]}]},{type:a,tag:L,props:{},children:[{type:a,tag:m,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:M},{type:a,tag:c,props:{className:[q]},children:[{type:b,value:r}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:g}]}]},{type:a,tag:e,props:{},children:[{type:b,value:s}]},{type:a,tag:e,props:{},children:[{type:b,value:ah}]}]},{type:a,tag:m,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:"$delimiter"}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:g}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:"''"}]}]},{type:a,tag:e,props:{},children:[{type:b,value:"The boundary string."}]}]},{type:a,tag:m,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:"$separator"}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:g}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:ai}]}]},{type:a,tag:e,props:{},children:[{type:b,value:"The output list separator "},{type:a,tag:"br",props:{},children:[]},{type:a,tag:h,props:{},children:[{type:b,value:"space"}]},{type:b,value:af},{type:a,tag:h,props:{},children:[{type:b,value:"comma"}]},{type:b,value:af},{type:a,tag:h,props:{},children:[{type:b,value:"slash"}]},{type:b,value:af},{type:a,tag:h,props:{},children:[{type:b,value:ai}]}]}]}]}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:N}]}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:"list"}]},{type:b,value:" - The list containing strings created by splitting the input string by boundary string."}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:O}]}]},{type:b,value:f},{type:a,tag:P,props:{className:[Q]},children:[{type:a,tag:R,props:{className:[S,T]},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{className:[d,o]},children:[{type:b,value:U}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:V}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,W,o]},children:[{type:b,value:X}]},{type:b,value:Y},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:p}]},{type:b,value:Z},{type:a,tag:c,props:{className:[d,o]},children:[{type:b,value:_}]},{type:b,value:$},{type:a,tag:c,props:{className:[d,aa]},children:[{type:b,value:v}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ab}]},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:"'foo|bar|baz'"}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ae}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:"'|'"}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ae}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:"'comma'"}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ac}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:p}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,ad]},children:[{type:b,value:"\u002F\u002F list: ('foo', 'bar', 'baz')"}]},{type:b,value:f}]}]}]},{type:b,value:f},{type:a,tag:y,props:{id:w},children:[{type:a,tag:z,props:{ariaHidden:A,href:"#str-trim",tabIndex:B},children:[{type:a,tag:c,props:{className:[C,D]},children:[]}]},{type:b,value:w}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:b,value:"Removes whitespaces from both ends of a given string."}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:E}]}]},{type:b,value:ag},{type:a,tag:F,props:{},children:[{type:a,tag:G,props:{},children:[{type:a,tag:m,props:{},children:[{type:a,tag:k,props:{},children:[{type:b,value:H}]},{type:a,tag:k,props:{},children:[{type:b,value:I}]},{type:a,tag:k,props:{},children:[{type:b,value:J}]},{type:a,tag:k,props:{},children:[{type:b,value:K}]}]}]},{type:a,tag:L,props:{},children:[{type:a,tag:m,props:{},children:[{type:a,tag:e,props:{},children:[{type:b,value:M},{type:a,tag:c,props:{className:[q]},children:[{type:b,value:r}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:g}]}]},{type:a,tag:e,props:{},children:[{type:b,value:s}]},{type:a,tag:e,props:{},children:[{type:b,value:"The string to trim."}]}]}]}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:N}]}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:g}]},{type:b,value:" - The string without whitespaces on both ends of it."}]},{type:b,value:f},{type:a,tag:i,props:{},children:[{type:a,tag:n,props:{},children:[{type:b,value:O}]}]},{type:b,value:f},{type:a,tag:P,props:{className:[Q]},children:[{type:a,tag:R,props:{className:[S,T]},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{className:[d,o]},children:[{type:b,value:U}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:V}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,W,o]},children:[{type:b,value:X}]},{type:b,value:Y},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:p}]},{type:b,value:Z},{type:a,tag:c,props:{className:[d,o]},children:[{type:b,value:_}]},{type:b,value:$},{type:a,tag:c,props:{className:[d,aa]},children:[{type:b,value:w}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ab}]},{type:a,tag:c,props:{className:[d,g]},children:[{type:b,value:"' foo bar   '"}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:ac}]},{type:a,tag:c,props:{className:[d,j]},children:[{type:b,value:p}]},{type:b,value:l},{type:a,tag:c,props:{className:[d,ad]},children:[{type:b,value:"\u002F\u002F string: 'foo bar'"}]},{type:b,value:f}]}]}]}]},dir:"\u002Fen\u002Ffunctions",path:"\u002Fen\u002Ffunctions\u002Fstring",extension:".md",createdAt:aj,updatedAt:aj,to:"\u002Ffunctions\u002Fstring"},prev:{title:"meta",path:"\u002Fen\u002Ffunctions\u002Fmeta",to:"\u002Ffunctions\u002Fmeta"},next:{title:"aspect-ratio",path:"\u002Fen\u002Fmixins\u002Faspect-ratio",to:"\u002Fmixins\u002Faspect-ratio"}}],fetch:{},mutations:[]}}("element","text","span","token","td","\n","string","code","p","punctuation","th"," ","tr","strong","keyword",";","text-red-600","*","—","str-capitalize","str-replace","str-split","str-trim",2,"h2","a","true",-1,"icon","icon-link","Arguments:","table","thead","Name","Type","Default","Description","tbody","$string ","Returns:","Example:","div","nuxt-content-highlight","pre","language-scss","line-numbers","@use","'more-sass'","module-modifier","as"," more","\n\n","@debug"," more.","function","(",")","comment",","," | ","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","The input string.","auto","2022-03-23T21:30:33.513Z")));