@use 'true' as *; // sass-true
@use './list-remove.scss' as *;

@include describe('Functions') {
	@include describe('list-remove') {
		@include it('Removes element from list using positive index') {
			@include assert-equal(list-remove((1, 2, 3, 4, 5), 1), (2, 3, 4, 5));
			@include assert-equal(list-remove((1, 2, 3, 4, 5), 2), (1, 3, 4, 5));
			@include assert-equal(list-remove((1, (2, 2), (3, 3), 4, 5), 2), (1, (3, 3), 4, 5));
		}

		@include it('Removes element from list using negative index') {
			@include assert-equal(list-remove((1, 2, 3, 4, 5), -1), (1, 2, 3, 4));
			@include assert-equal(list-remove((1, 2, 3, 4, 5), -2), (1, 2, 3, 5));
			@include assert-equal(list-remove((1, (2, 2), (3, 3), 4, 5), -3), (1, (2, 2), 4, 5));
		}

		@include it('Returns original list clone if calculated $index is out of range or invalid') {
			@include assert-equal(list-remove((1, 2, 3, 4, 5), 'string'), (1, 2, 3, 4, 5));
			@include assert-equal(list-remove((1, 2, 3, 4, 5), null), (1, 2, 3, 4, 5));
			@include assert-equal(list-remove((1, 2, 3, 4, 5), true), (1, 2, 3, 4, 5));
			@include assert-equal(list-remove((1, 2, 3, 4, 5), 1.5), (1, 2, 3, 4, 5));
			@include assert-equal(list-remove((1, 2, 3, 4, 5), 1s), (1, 2, 3, 4, 5));
			@include assert-equal(list-remove((1, 2, 3, 4, 5), ()), (1, 2, 3, 4, 5));
			@include assert-equal(list-remove((1, 2, 3, 4, 5), 0), (1, 2, 3, 4, 5));
			@include assert-equal(list-remove((1, 2, 3, 4, 5), 100), (1, 2, 3, 4, 5));
			@include assert-equal(list-remove((1, (2, 2), (3, 3), 4, 5), -100), (1, (2, 2), (3, 3), 4, 5));
		}

		@include it('Respect the list separator') {
			@include assert-equal(list-remove((1 2 3 4 5), 2), (1 3 4 5));
		}

		@include it('Respect the list brackets') {
			$list-input: 1, 2, 3, 4, 5;
			$list-expected: 1, 3, 4, 5;

			@include assert-equal(list-remove($list-input, 2), $list-expected);
		}
	}
}
